#!/usr/bin/env perl
use strict;
use warnings;
use FindBin;
use Cwd 'abs_path';
# this actually should be Makefile

my $nginx     = 'http://nginx.org/download/nginx-1.0.4.tar.gz';
my $nginx_dir = 'nginx-1.0.4';
local $/ = undef;

my $home = abs_path("$FindBin::Bin/..");
chdir($home);

for ('log', 'tmp', 'tmp/body') {
    mkdir("$home/$_") or die "Unable to create dir $_: $!" unless -d $_;
}

unless (-e "$home/$nginx_dir") {
    system("curl -C - -O $nginx")        and die "Network error?\n";
    system("tar xzf nginx-1.0.4.tar.gz") and die "Have not tar?\n";
}

my $tmp_conf = "$home/tmp/nginx.conf";
unless (-f $tmp_conf) {

    my $conf_template = "$home/eg/nginx.conf";

    my $conf_body = do { open my $CNF, '<', $conf_template; <$CNF> };

    $conf_body
      =~ s#^\s*error_log\s+.*#error_log "$home/log/error.local.log" debug;#;
    $conf_body =~ s#(\n\s*psgi)\s+.*#$1 "$home/eg/helloworld.psgi";#;

    open my $CNF, '>', $tmp_conf
      or die "Unable to create temporarry conf '$tmp_conf': $!";
    print $CNF $conf_body;
}

# Kill running nginx
my $pidfile = "$home/tmp/nginx.pid";
if (-f $pidfile) {

    my $pid = do { open my $PID, '<', $pidfile; <$PID> };
    kill 2, $pid;
}

chdir("$home/$nginx_dir");

unless (-f "$home/$nginx_dir/Makefile") {

    # minimalistic build
    my $config_opts = <<END;
--without-http_charset_module
--without-http_gzip_module
--without-http_ssi_module
--without-http_userid_module
--without-http_access_module
--without-http_auth_basic_module
--without-http_autoindex_module
--without-http_geo_module
--without-http_map_module
--without-http_split_clients_module
--without-http_referer_module
--without-http_rewrite_module
--without-http_proxy_module
--without-http_fastcgi_module
--without-http_uwsgi_module
--without-http_scgi_module
--without-http_memcached_module
--without-http_limit_zone_module
--without-http_limit_req_module
--without-http_empty_gif_module
--without-http_browser_module
--without-http_upstream_ip_hash_module

--conf-path="$tmp_conf"
--error-log-path="$home/log/error.log"
--http-client-body-temp-path="$home/tmp/body"
--http-log-path="$home/log/access.log"
--lock-path="$home/tmp/nginx.lock"
--pid-path="$pidfile"
--with-debug
--add-module="$home"
END

    $config_opts =~ s/\n/ /g;
    warn "Configuring with opts:\n$config_opts\n";
    system("./configure $config_opts") and die "Configure failed\n";
}

`rm $home/log/* > /dev/null`;
system("make > $home/tmp/make.log") and die "make filed. see '$home/tmp/make.log for details\n";
system("objs/nginx") and die "nginx failed to start\n";

print "Sending simple request with body 'Client request body'\nAnswer:\n\n";

system('curl http://127.0.0.1:3000/ -d "Client request body" -D -');

print <<END;

What to do now:

You may want to see logs:

    $home/log/access.log
    $home/log/error.log
    $home/log/error.local.log

You also may want to edit psgi app or nginx.conf and run `eg/try` again:

    $home/eg/helloworld.psgi
    $home/tmp/nginx.conf

END
